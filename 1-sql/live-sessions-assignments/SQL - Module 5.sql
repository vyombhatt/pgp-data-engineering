
USE INTELLIPAAT;

--1. Display the names of the highest paid programmers for each Language.

WITH 
PROG_SAL AS (
	SELECT PNAME, PROF1 AS PROF, SALARY
	FROM PROGRAMMER
	UNION ALL
	SELECT PNAME, PROF2 AS PROF, SALARY
	FROM PROGRAMMER
	)
SELECT PROF, PNAME AS HIGHEST_PAID_PROGRAMMER
FROM (
	SELECT PROF, PNAME, SALARY, RANK() OVER (PARTITION BY PROF ORDER BY SALARY DESC) RNK
	FROM PROG_SAL
	) A
WHERE RNK = 1
ORDER BY 1;

--2. Display the details of those who are drawing the same salary.

SELECT FNAME, SNAME, SALARY
FROM (
	SELECT A.PNAME AS FNAME, B.PNAME AS SNAME, B.SALARY, ROW_NUMBER() OVER (PARTITION BY LEAST(A.PNAME, B.PNAME), GREATEST(A.PNAME, B.PNAME), B.SALARY ORDER BY B.SALARY) AS RNUM
	FROM PROGRAMMER A
	INNER JOIN PROGRAMMER B
	  ON A.SALARY = B.SALARY
	WHERE A.PNAME != B.PNAME
	) A
WHERE RNUM = 1;

--3. Who are the programmers who joined on the same day?

SELECT FNAME, SNAME, DOJ
FROM (
	SELECT A.PNAME AS FNAME, B.PNAME AS SNAME, B.DOJ, ROW_NUMBER() OVER (PARTITION BY LEAST(A.PNAME, B.PNAME), GREATEST(A.PNAME, B.PNAME), B.DOJ ORDER BY B.DOJ) AS RNUM
	FROM PROGRAMMER A
	INNER JOIN PROGRAMMER B
	  ON A.DOJ = B.DOJ
	WHERE A.PNAME != B.PNAME
	) A
WHERE RNUM = 1;

--4. Who are the programmers who have the same Prof2?

SELECT FNAME, SNAME, PROF2
FROM (
	SELECT A.PNAME AS FNAME, B.PNAME AS SNAME, B.PROF2, ROW_NUMBER() OVER (PARTITION BY LEAST(A.PNAME, B.PNAME), GREATEST(A.PNAME, B.PNAME), B.PROF2 ORDER BY B.PROF2) AS RNUM
	FROM PROGRAMMER A
	INNER JOIN PROGRAMMER B
	  ON A.PROF2 = B.PROF2
	WHERE A.PNAME != B.PNAME
	) A
WHERE RNUM = 1;

--5. How many packages were developed by the person who developed the cheapest package, where did he/she study?

WITH
CHEAPEST_PCKG AS (
	SELECT TOP 1 PNAME
	FROM SOFTWARE
	ORDER BY DCOST DESC)
SELECT A.PNAME, C.INSTITUTE, COUNT(B.TITLE) AS NO_OF_PACKAGES
FROM CHEAPEST_PCKG A
INNER JOIN SOFTWARE B
  ON A.PNAME = B.PNAME
INNER JOIN STUDIES C
  ON A.PNAME = C.PNAME
GROUP BY A.PNAME, C.INSTITUTE;

